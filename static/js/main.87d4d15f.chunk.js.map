{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api/api.ts","App.tsx","index.tsx"],"names":["MovieCard","memo","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","FindMovie","onAdd","useState","previewMovie","setPreviewMovie","fetchError","setFetchError","title","setTitle","fetchMovie","useCallback","fetch","then","response","json","request","Response","handlChange","event","target","value","htmlFor","type","id","placeholder","onChange","onClick","App","setMovies","addedFilmsId","useRef","newMovie","current","includes","state","ReactDOM","render","document","getElementById"],"mappings":"6TAOaA,EAA6BC,gBAAK,SAACC,GAC9C,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,mCC7BGC,EAA8BT,gBAAK,SAACC,GAC/C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,gBCJRC,G,MAA6Bb,gBAAK,YAAgB,IAAbc,EAAY,EAAZA,MAChD,EAAwCC,mBAAuB,MAA/D,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAaC,uBAAY,kBCbV,SAACH,GAAD,OAAmBI,MAAM,GAAD,OAF9B,0BAE8B,oBAH/B,WAG+B,cAAqCJ,IACjFK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UDazBC,CAAQR,GACLK,MAAK,YAAgD,IAA7CI,EAA4C,EAA5CA,SAAUrB,EAAkC,EAAlCA,KAAMH,EAA4B,EAA5BA,OAAQE,EAAoB,EAApBA,MAAOK,EAAa,EAAbA,OACtCO,EAA2B,SAAbU,GACdR,EAAS,IAGPJ,EADe,SAAbY,EACc,CAAErB,OAAMH,SAAQE,QAAOK,UAEvB,WAGrB,CAACQ,IAEEU,EAAcP,uBAAY,SAACQ,GAC/BV,EAASU,EAAMC,OAAOC,SACrB,IAEH,OACE,qCACE,uBAAM9B,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ+B,QAAQ,cAAjC,yBAIA,qBAAK/B,UAAU,UAAf,SACE,uBACEgC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZlC,UAAS,gBAAWe,GAAc,aAClCoB,SAAUR,MAIbZ,GACC,mBAAGf,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEgC,KAAK,SACLhC,UAAU,kBACVoC,QAASjB,EAHX,4BASF,qBAAKnB,UAAU,UAAf,SACE,wBACEgC,KAAK,SACLhC,UAAU,oBACVoC,QAASzB,EAAME,GAHjB,qCAWN,sBAAKb,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCa,GAAgB,cAAC,EAAD,CAAWd,MAAOc,cE/E9BwB,EAAU,WACrB,MAA4BzB,mBAAkB,IAA9C,mBAAOL,EAAP,KAAe+B,EAAf,KACMC,EAAeC,iBAAiB,IAStC,OACE,sBAAKxC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWW,MAbA,SAAC8B,GAAD,OAAqB,WAChCA,IAAaF,EAAaG,QAAQC,SAASF,EAAShC,UACtD6B,GAAU,SAACM,GAAD,4BAAeA,GAAf,CAAsBH,OAChCF,EAAaG,QAAb,sBAA2BH,EAAaG,SAAxC,CAAiDD,EAAShC,oBCRhEoC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.87d4d15f.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = memo((props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React, { memo } from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = memo((props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n});\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { memo, useCallback, useState } from 'react';\nimport { request } from '../../api/api';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onAdd: CallableFunction;\n};\n\nexport const FindMovie: React.FC<Props> = memo(({ onAdd }) => {\n  const [previewMovie, setPreviewMovie] = useState<Movie | null>(null);\n  const [fetchError, setFetchError] = useState(false);\n  const [title, setTitle] = useState('');\n\n  const fetchMovie = useCallback(() => (\n    request(title)\n      .then(({ Response, Plot, Poster, Title, imdbID }) => {\n        setFetchError(Response !== 'True');\n        setTitle('');\n\n        if (Response === 'True') {\n          setPreviewMovie({ Plot, Poster, Title, imdbID });\n        } else {\n          setPreviewMovie(null);\n        }\n      })\n  ), [title]);\n\n  const handlChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n  }, []);\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${fetchError && 'is-danger'}`}\n              onChange={handlChange}\n            />\n          </div>\n\n          {fetchError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={fetchMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={onAdd(previewMovie)}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {previewMovie && <MovieCard movie={previewMovie} />}\n      </div>\n    </>\n  );\n});\n","const API_KEY = 'a851ad66';\nconst BASE_URL = 'https://www.omdbapi.com';\n\nexport const request = (title: string) => fetch(`${BASE_URL}/?apikey=${API_KEY}&t=${title}`)\n  .then(response => response.json());\n","import { FC, useRef, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const addedFilmsId = useRef<string[]>([]);\n\n  const addMovie = (newMovie: Movie) => () => {\n    if (newMovie && !addedFilmsId.current.includes(newMovie.imdbID)) {\n      setMovies((state) => [...state, newMovie]);\n      addedFilmsId.current = [...addedFilmsId.current, newMovie.imdbID];\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}